// Generated by Dagger (https://dagger.dev).
package com.example.topnews.ui.listfragment;

import androidx.lifecycle.SavedStateHandle;
import com.example.topnews.domain.usecase.NewsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ListViewModel_Factory implements Factory<ListViewModel> {
  private final Provider<NewsUseCase> newsUseCaseProvider;

  private final Provider<SavedStateHandle> stateProvider;

  public ListViewModel_Factory(Provider<NewsUseCase> newsUseCaseProvider,
      Provider<SavedStateHandle> stateProvider) {
    this.newsUseCaseProvider = newsUseCaseProvider;
    this.stateProvider = stateProvider;
  }

  @Override
  public ListViewModel get() {
    return newInstance(newsUseCaseProvider.get(), stateProvider.get());
  }

  public static ListViewModel_Factory create(Provider<NewsUseCase> newsUseCaseProvider,
      Provider<SavedStateHandle> stateProvider) {
    return new ListViewModel_Factory(newsUseCaseProvider, stateProvider);
  }

  public static ListViewModel newInstance(NewsUseCase newsUseCase, SavedStateHandle state) {
    return new ListViewModel(newsUseCase, state);
  }
}
